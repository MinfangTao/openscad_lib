// 部分圆形 2D 拉伸成 3D
// D = 直径, C = 切割线长度（圆与X轴两个交点的距离）, H = 拉伸高度
// 当 C = D 时，切割线通过圆心，得到半圆

// 参数定义
D = 50;    // 直径
C = 40;    // 切割线长度
H = 15;    // 拉伸高度

// 模块：创建部分圆形并拉伸成 3D
module partial_circle_3d(d, c, h) {
    // 使用 assert 进行参数验证
    assert(c <= d, str("错误: C (", c, ") 不能大于 D (", d, ")!"));
    assert(c > 0, "错误: C 必须大于 0!");
    assert(d > 0, "错误: D 必须大于 0!");
    assert(h > 0, "错误: H 必须大于 0!");
    
    r = d / 2;  // 半径
    
    // 计算需要向下移动的距离 n
    // 使得圆与 x 轴的两个交点距离为 C
    // n = sqrt(r^2 - (C/2)^2)
    n = sqrt(r*r - (c/2)*(c/2));
    
    // 输出信息到控制台
    echo(str("创建部分圆形: 直径=", d, ", 切割线长度=", c, ", 高度=", h));
    echo(str("圆心向下移动距离 n=", n));
    
    if (c == d) {
        echo("提示: 这是一个半圆（切割线=直径，通过圆心）");
    }
    
    // 使用 linear_extrude 将 2D 拉伸成 3D
    linear_extrude(height = h) {
        intersection() {
            // 1. 创建圆，直径 D
            // 2. 向下移动 n（让圆心在 y = -n）
            translate([0, -n])
                circle(r = r, $fn = 100);
            
            // 3. 只保留 y >= 0 的部分（X 轴上方）
            translate([-r, 0])
                square([d, r]);
        }
    }
}

// 调用模块创建形状
// partial_circle_3d(D, C, H);

// 测试用例说明:
// D=50, C=50  -> 半圆（切割线=直径，通过圆心）
// D=50, C=40  -> 小于半圆（保留较小圆弧）
// D=50, C=30  -> 更小的圆弧部分
// D=50, C=10  -> 很小的圆弧
// D=50, C=60  -> 错误（切割线不能大于直径）